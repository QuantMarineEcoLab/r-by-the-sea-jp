---
title: 'Notes D'
subtitle: 'lubridate: Working with dates in R`'
format:
  html:
    toc: true
    code-overflow: wrap
    code-fold: false
    embed-resources: true
execute: 
  message: FALSE
  warning: FALSE
editor_options: 
  chunk_output_type: console
---

```{r}
#LOAD PACKAGES 
library(tidyverse)
library(lubridate)
```

# Date Formats

Think of how many different formats you know of to list today's date: 


Yikes! 

# Date, Time, and Datetime

Date/time data are data that conveys information about, you guessed it, date and/or time! There are three relevant data types when we talk about date/time data:

1. Date - only has the date (e.g. 2020-05-15) 
2. Time - only has the time (e.g. 20:45:00) 
3. Datetime - has both the date and time (e.g. 2020-05-15 20:45:00)

# Standard Date Format

The `ymd()` function transforms data in all kinds of different formats into a standardized date format displaying year, then month, then day. 

```{r}
ymd("06 02 04")
ymd("06/02/04")
ymd("20060204")  # works as well
ymd("2006 2 4")
ymd(060204)  # works with numbers
```

`mdy()` (month day year) and `dmy()` (day month year) formats also exist. 

```{r}
ymd_hms("2020-04-01 10:30:13")
ymd_hm("2020/04/01 10.30")
```

## Formating Madagascar date_time column

Why function do you think you would use to format the madagascar data_time column from a character to a POSIXct format? Write it in the markdown doc below (e.g., `ymd_hms`)


#Exercise 1

1. Load in the madagascar data set
```{r}

```

2. Make a plot of the water temperature over time. Hint: use `geom_point`in `ggplot2`
```{r}

```

3. Look at the class (e.g, character, number) of each of your columns. What is the class of the date_time column?
```{r}

```

4. Change the date_time column to a POSIXct format. Check to see if the column was changed and graph the temperature over time again. 
```{r}

```



# Changing time zones

To get a list of the available time zones, we can use `OlsonNames()`

To check time zones, we can use `tz`. Check the timezone of the date_time column. What is the time zone?
```{r}

```

Let's change the time zone to Africa/Nairobi. 
We can use `mutate` to add a new column or overwrite a column
`with_tz` returns a date-time as it would appear in a different time zone. Change the time zone. After doing so, check the time zone. 
```{r}

```


# Making Dates From Values

```{r}
#make_date

#make_datetime
```


# Portal Data

```{r}
#LOAD DATA
#Recall the Portal Dataset
portal_rodent <- read.csv("https://github.com/weecology/PortalData/raw/main/Rodents/Portal_rodent.csv")
```

Unfortunately, because the information about datetime is divided up into different columns, R does not recognize it as date/time data. What we need to do is combine and convert all of these columns into datetime. To do this, we can use the function `make_datetime()`

```{r}

```

# Rounding Times

```{r}
t <- ymd_hms("2022-11-15 00:08:30")
```

```{r}
#Round
round_date(t, unit = "second") #no change
round_date(t, unit = "minute")
round_date(t, unit = "hour")
round_date(t, unit = "day")
```


```{r}
#Force Round UP
ceiling_date(t, unit = "minute")
ceiling_date(t, unit = "hour")
```

```{r}
#Force Round DOWN
floor_date(t, unit = "minute")
floor_date(t, unit = "hour")
```




